"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Comet Lab API.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python test_auth.py
"""

import requests
from datetime import datetime

API_URL = "http://localhost:8000"


def test_login(username: str, password: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω"""
    print(f"\nüîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
    
    response = requests.post(
        f"{API_URL}/login",
        data={"username": username, "password": password}
    )
    
    if response.status_code == 200:
        token = response.json()["access_token"]
        print(f"‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω!")
        print(f"üìù –¢–æ–∫–µ–Ω (–ø–µ—Ä–≤—ã–µ 50 —Å–∏–º–≤–æ–ª–æ–≤): {token[:50]}...")
        return token
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {response.status_code}")
        print(f"   {response.text}")
        return None


def test_me(token: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    print(f"\nüë§ –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{API_URL}/me", headers=headers)
    
    if response.status_code == 200:
        user = response.json()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['username']} (ID: {user['id']})")
        print(f"   –°–æ–∑–¥–∞–Ω: {user['created_at']}")
        return user
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(f"   {response.text}")
        return None


def test_observations(token: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π"""
    print(f"\nüî≠ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = requests.get(f"{API_URL}/observations", headers=headers)
    
    if response.status_code == 200:
        observations = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π: {len(observations)}")
        if observations:
            print(f"   –ü–µ—Ä–≤–æ–µ: RA={observations[0]['ra_hours']}, Dec={observations[0]['dec_degrees']}")
        return observations
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(f"   {response.text}")
        return None


def test_register(username: str, password: str):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}")
    
    response = requests.post(
        f"{API_URL}/register",
        json={"username": username, "password": password}
    )
    
    if response.status_code == 201:
        user = response.json()
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!")
        print(f"   ID: {user['id']}, Username: {user['username']}")
        return user
    elif response.status_code == 400:
        print(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return None
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        print(f"   {response.text}")
        return None


def test_unauthorized():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –±–µ–∑ —Ç–æ–∫–µ–Ω–∞"""
    print(f"\nüö´ –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞")
    
    response = requests.get(f"{API_URL}/observations")
    
    if response.status_code == 401:
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ª—É—á–∏–ª–∏ 401 Unauthorized")
        print(f"   {response.json()}")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥: {response.status_code}")


def main():
    print("=" * 60)
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Comet Lab API")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    test_unauthorized()
    
    # –¢–µ—Å—Ç 2: –õ–æ–≥–∏–Ω –∫–∞–∫ admin
    admin_token = test_login("admin", "admin")
    if admin_token:
        test_me(admin_token)
        test_observations(admin_token)
    
    # –¢–µ—Å—Ç 3: –õ–æ–≥–∏–Ω –∫–∞–∫ user
    user_token = test_login("user", "user")
    if user_token:
        test_me(user_token)
        test_observations(user_token)
    
    # –¢–µ—Å—Ç 4: –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å
    test_login("admin", "wrongpassword")
    
    # –¢–µ—Å—Ç 5: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    test_register("testuser", "testpass123")
    
    # –¢–µ—Å—Ç 6: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    test_register("admin", "anypassword")
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 60)


if __name__ == "__main__":
    try:
        main()
    except requests.exceptions.ConnectionError:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: docker compose up")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
