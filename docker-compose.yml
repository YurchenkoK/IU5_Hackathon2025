version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: comet_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-comet_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - comet_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: comet_backend
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-comet_db}
    volumes:
      - ./backend/app:/code/app
      - ./backend/uploads:/code/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - comet_network
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: comet_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - comet_network
    restart: unless-stopped

networks:
  comet_network:
    driver: bridge

volumes:
  postgres_data:
